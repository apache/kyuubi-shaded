/**
 * Autogenerated by Thrift Compiler (0.16.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package org.apache.kyuubi.shaded.hive.metastore.api;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.16.0)")
@org.apache.hadoop.classification.InterfaceAudience.Public @org.apache.hadoop.classification.InterfaceStability.Stable public class ThriftHiveMetastore {

  /**
   * This interface is live.
   */
  @org.apache.hadoop.classification.InterfaceAudience.Public @org.apache.hadoop.classification.InterfaceStability.Stable public interface Iface extends org.apache.kyuubi.shaded.fb303.FacebookService.Iface {

    public java.lang.String get_delegation_token(java.lang.String token_owner, java.lang.String renewer_kerberos_principal_name) throws MetaException, org.apache.kyuubi.shaded.thrift.TException;

  }

  @org.apache.hadoop.classification.InterfaceAudience.Public @org.apache.hadoop.classification.InterfaceStability.Stable public interface AsyncIface extends org.apache.kyuubi.shaded.fb303.FacebookService .AsyncIface {

    public void get_delegation_token(java.lang.String token_owner, java.lang.String renewer_kerberos_principal_name, org.apache.kyuubi.shaded.thrift.async.AsyncMethodCallback<java.lang.String> resultHandler) throws org.apache.kyuubi.shaded.thrift.TException;

  }

  @org.apache.hadoop.classification.InterfaceAudience.Public @org.apache.hadoop.classification.InterfaceStability.Stable public static class Client extends org.apache.kyuubi.shaded.fb303.FacebookService.Client implements Iface {
    @org.apache.hadoop.classification.InterfaceAudience.Public @org.apache.hadoop.classification.InterfaceStability.Stable public static class Factory implements org.apache.kyuubi.shaded.thrift.TServiceClientFactory<Client> {
      public Factory() {}
      public Client getClient(org.apache.kyuubi.shaded.thrift.protocol.TProtocol prot) {
        return new Client(prot);
      }
      public Client getClient(org.apache.kyuubi.shaded.thrift.protocol.TProtocol iprot, org.apache.kyuubi.shaded.thrift.protocol.TProtocol oprot) {
        return new Client(iprot, oprot);
      }
    }

    public Client(org.apache.kyuubi.shaded.thrift.protocol.TProtocol prot)
    {
      super(prot, prot);
    }

    public Client(org.apache.kyuubi.shaded.thrift.protocol.TProtocol iprot, org.apache.kyuubi.shaded.thrift.protocol.TProtocol oprot) {
      super(iprot, oprot);
    }

    public java.lang.String get_delegation_token(java.lang.String token_owner, java.lang.String renewer_kerberos_principal_name) throws MetaException, org.apache.kyuubi.shaded.thrift.TException
    {
      send_get_delegation_token(token_owner, renewer_kerberos_principal_name);
      return recv_get_delegation_token();
    }

    public void send_get_delegation_token(java.lang.String token_owner, java.lang.String renewer_kerberos_principal_name) throws org.apache.kyuubi.shaded.thrift.TException
    {
      get_delegation_token_args args = new get_delegation_token_args();
      args.setToken_owner(token_owner);
      args.setRenewer_kerberos_principal_name(renewer_kerberos_principal_name);
      sendBase("get_delegation_token", args);
    }

    public java.lang.String recv_get_delegation_token() throws MetaException, org.apache.kyuubi.shaded.thrift.TException
    {
      get_delegation_token_result result = new get_delegation_token_result();
      receiveBase(result, "get_delegation_token");
      if (result.isSetSuccess()) {
        return result.success;
      }
      if (result.o1 != null) {
        throw result.o1;
      }
      throw new org.apache.kyuubi.shaded.thrift.TApplicationException(org.apache.kyuubi.shaded.thrift.TApplicationException.MISSING_RESULT, "get_delegation_token failed: unknown result");
    }

  }
  @org.apache.hadoop.classification.InterfaceAudience.Public @org.apache.hadoop.classification.InterfaceStability.Stable public static class AsyncClient extends org.apache.kyuubi.shaded.fb303.FacebookService.AsyncClient implements AsyncIface {
    @org.apache.hadoop.classification.InterfaceAudience.Public @org.apache.hadoop.classification.InterfaceStability.Stable public static class Factory implements org.apache.kyuubi.shaded.thrift.async.TAsyncClientFactory<AsyncClient> {
      private org.apache.kyuubi.shaded.thrift.async.TAsyncClientManager clientManager;
      private org.apache.kyuubi.shaded.thrift.protocol.TProtocolFactory protocolFactory;
      public Factory(org.apache.kyuubi.shaded.thrift.async.TAsyncClientManager clientManager, org.apache.kyuubi.shaded.thrift.protocol.TProtocolFactory protocolFactory) {
        this.clientManager = clientManager;
        this.protocolFactory = protocolFactory;
      }
      public AsyncClient getAsyncClient(org.apache.kyuubi.shaded.thrift.transport.TNonblockingTransport transport) {
        return new AsyncClient(protocolFactory, clientManager, transport);
      }
    }

    public AsyncClient(org.apache.kyuubi.shaded.thrift.protocol.TProtocolFactory protocolFactory, org.apache.kyuubi.shaded.thrift.async.TAsyncClientManager clientManager, org.apache.kyuubi.shaded.thrift.transport.TNonblockingTransport transport) {
      super(protocolFactory, clientManager, transport);
    }

    public void get_delegation_token(java.lang.String token_owner, java.lang.String renewer_kerberos_principal_name, org.apache.kyuubi.shaded.thrift.async.AsyncMethodCallback<java.lang.String> resultHandler) throws org.apache.kyuubi.shaded.thrift.TException {
      checkReady();
      get_delegation_token_call method_call = new get_delegation_token_call(token_owner, renewer_kerberos_principal_name, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    @org.apache.hadoop.classification.InterfaceAudience.Public @org.apache.hadoop.classification.InterfaceStability.Stable public static class get_delegation_token_call extends org.apache.kyuubi.shaded.thrift.async.TAsyncMethodCall<java.lang.String> {
      private java.lang.String token_owner;
      private java.lang.String renewer_kerberos_principal_name;
      public get_delegation_token_call(java.lang.String token_owner, java.lang.String renewer_kerberos_principal_name, org.apache.kyuubi.shaded.thrift.async.AsyncMethodCallback<java.lang.String> resultHandler, org.apache.kyuubi.shaded.thrift.async.TAsyncClient client, org.apache.kyuubi.shaded.thrift.protocol.TProtocolFactory protocolFactory, org.apache.kyuubi.shaded.thrift.transport.TNonblockingTransport transport) throws org.apache.kyuubi.shaded.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.token_owner = token_owner;
        this.renewer_kerberos_principal_name = renewer_kerberos_principal_name;
      }

      public void write_args(org.apache.kyuubi.shaded.thrift.protocol.TProtocol prot) throws org.apache.kyuubi.shaded.thrift.TException {
        prot.writeMessageBegin(new org.apache.kyuubi.shaded.thrift.protocol.TMessage("get_delegation_token", org.apache.kyuubi.shaded.thrift.protocol.TMessageType.CALL, 0));
        get_delegation_token_args args = new get_delegation_token_args();
        args.setToken_owner(token_owner);
        args.setRenewer_kerberos_principal_name(renewer_kerberos_principal_name);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public java.lang.String getResult() throws MetaException, org.apache.kyuubi.shaded.thrift.TException {
        if (getState() != org.apache.kyuubi.shaded.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new java.lang.IllegalStateException("Method call not finished!");
        }
        org.apache.kyuubi.shaded.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.kyuubi.shaded.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.kyuubi.shaded.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_get_delegation_token();
      }
    }

  }

  @org.apache.hadoop.classification.InterfaceAudience.Public @org.apache.hadoop.classification.InterfaceStability.Stable public static class Processor<I extends Iface> extends org.apache.kyuubi.shaded.fb303.FacebookService.Processor<I> implements org.apache.kyuubi.shaded.thrift.TProcessor {
    private static final org.slf4j.Logger _LOGGER = org.slf4j.LoggerFactory.getLogger(Processor.class.getName());
    public Processor(I iface) {
      super(iface, getProcessMap(new java.util.HashMap<java.lang.String, org.apache.kyuubi.shaded.thrift.ProcessFunction<I, ? extends org.apache.kyuubi.shaded.thrift.TBase>>()));
    }

    protected Processor(I iface, java.util.Map<java.lang.String, org.apache.kyuubi.shaded.thrift.ProcessFunction<I, ? extends org.apache.kyuubi.shaded.thrift.TBase>> processMap) {
      super(iface, getProcessMap(processMap));
    }

    private static <I extends Iface> java.util.Map<java.lang.String,  org.apache.kyuubi.shaded.thrift.ProcessFunction<I, ? extends org.apache.kyuubi.shaded.thrift.TBase>> getProcessMap(java.util.Map<java.lang.String, org.apache.kyuubi.shaded.thrift.ProcessFunction<I, ? extends  org.apache.kyuubi.shaded.thrift.TBase>> processMap) {
      processMap.put("get_delegation_token", new get_delegation_token());
      return processMap;
    }

    @org.apache.hadoop.classification.InterfaceAudience.Public @org.apache.hadoop.classification.InterfaceStability.Stable public static class get_delegation_token<I extends Iface> extends org.apache.kyuubi.shaded.thrift.ProcessFunction<I, get_delegation_token_args> {
      public get_delegation_token() {
        super("get_delegation_token");
      }

      public get_delegation_token_args getEmptyArgsInstance() {
        return new get_delegation_token_args();
      }

      protected boolean isOneway() {
        return false;
      }

      @Override
      protected boolean rethrowUnhandledExceptions() {
        return false;
      }

      public get_delegation_token_result getResult(I iface, get_delegation_token_args args) throws org.apache.kyuubi.shaded.thrift.TException {
        get_delegation_token_result result = new get_delegation_token_result();
        try {
          result.success = iface.get_delegation_token(args.token_owner, args.renewer_kerberos_principal_name);
        } catch (MetaException o1) {
          result.o1 = o1;
        }
        return result;
      }
    }

  }

  @org.apache.hadoop.classification.InterfaceAudience.Public @org.apache.hadoop.classification.InterfaceStability.Stable public static class AsyncProcessor<I extends AsyncIface> extends org.apache.kyuubi.shaded.fb303.FacebookService.AsyncProcessor<I> {
    private static final org.slf4j.Logger _LOGGER = org.slf4j.LoggerFactory.getLogger(AsyncProcessor.class.getName());
    public AsyncProcessor(I iface) {
      super(iface, getProcessMap(new java.util.HashMap<java.lang.String, org.apache.kyuubi.shaded.thrift.AsyncProcessFunction<I, ? extends org.apache.kyuubi.shaded.thrift.TBase, ?>>()));
    }

    protected AsyncProcessor(I iface, java.util.Map<java.lang.String,  org.apache.kyuubi.shaded.thrift.AsyncProcessFunction<I, ? extends  org.apache.kyuubi.shaded.thrift.TBase, ?>> processMap) {
      super(iface, getProcessMap(processMap));
    }

    private static <I extends AsyncIface> java.util.Map<java.lang.String,  org.apache.kyuubi.shaded.thrift.AsyncProcessFunction<I, ? extends  org.apache.kyuubi.shaded.thrift.TBase,?>> getProcessMap(java.util.Map<java.lang.String,  org.apache.kyuubi.shaded.thrift.AsyncProcessFunction<I, ? extends  org.apache.kyuubi.shaded.thrift.TBase, ?>> processMap) {
      processMap.put("get_delegation_token", new get_delegation_token());
      return processMap;
    }

    @org.apache.hadoop.classification.InterfaceAudience.Public @org.apache.hadoop.classification.InterfaceStability.Stable public static class get_delegation_token<I extends AsyncIface> extends org.apache.kyuubi.shaded.thrift.AsyncProcessFunction<I, get_delegation_token_args, java.lang.String> {
      public get_delegation_token() {
        super("get_delegation_token");
      }

      public get_delegation_token_args getEmptyArgsInstance() {
        return new get_delegation_token_args();
      }

      public org.apache.kyuubi.shaded.thrift.async.AsyncMethodCallback<java.lang.String> getResultHandler(final org.apache.kyuubi.shaded.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
        final org.apache.kyuubi.shaded.thrift.AsyncProcessFunction fcall = this;
        return new org.apache.kyuubi.shaded.thrift.async.AsyncMethodCallback<java.lang.String>() { 
          public void onComplete(java.lang.String o) {
            get_delegation_token_result result = new get_delegation_token_result();
            result.success = o;
            try {
              fcall.sendResponse(fb, result, org.apache.kyuubi.shaded.thrift.protocol.TMessageType.REPLY,seqid);
            } catch (org.apache.kyuubi.shaded.thrift.transport.TTransportException e) {
              _LOGGER.error("TTransportException writing to internal frame buffer", e);
              fb.close();
            } catch (java.lang.Exception e) {
              _LOGGER.error("Exception writing to internal frame buffer", e);
              onError(e);
            }
          }
          public void onError(java.lang.Exception e) {
            byte msgType = org.apache.kyuubi.shaded.thrift.protocol.TMessageType.REPLY;
            org.apache.kyuubi.shaded.thrift.TSerializable msg;
            get_delegation_token_result result = new get_delegation_token_result();
            if (e instanceof MetaException) {
              result.o1 = (MetaException) e;
              result.setO1IsSet(true);
              msg = result;
            } else if (e instanceof org.apache.kyuubi.shaded.thrift.transport.TTransportException) {
              _LOGGER.error("TTransportException inside handler", e);
              fb.close();
              return;
            } else if (e instanceof org.apache.kyuubi.shaded.thrift.TApplicationException) {
              _LOGGER.error("TApplicationException inside handler", e);
              msgType = org.apache.kyuubi.shaded.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.kyuubi.shaded.thrift.TApplicationException)e;
            } else {
              _LOGGER.error("Exception inside handler", e);
              msgType = org.apache.kyuubi.shaded.thrift.protocol.TMessageType.EXCEPTION;
              msg = new org.apache.kyuubi.shaded.thrift.TApplicationException(org.apache.kyuubi.shaded.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
            } catch (java.lang.Exception ex) {
              _LOGGER.error("Exception writing to internal frame buffer", ex);
              fb.close();
            }
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, get_delegation_token_args args, org.apache.kyuubi.shaded.thrift.async.AsyncMethodCallback<java.lang.String> resultHandler) throws org.apache.kyuubi.shaded.thrift.TException {
        iface.get_delegation_token(args.token_owner, args.renewer_kerberos_principal_name,resultHandler);
      }
    }

  }

  @org.apache.hadoop.classification.InterfaceAudience.Public @org.apache.hadoop.classification.InterfaceStability.Stable public static class get_delegation_token_args implements org.apache.kyuubi.shaded.thrift.TBase<get_delegation_token_args, get_delegation_token_args._Fields>, java.io.Serializable, Cloneable, Comparable<get_delegation_token_args>   {
    private static final org.apache.kyuubi.shaded.thrift.protocol.TStruct STRUCT_DESC = new org.apache.kyuubi.shaded.thrift.protocol.TStruct("get_delegation_token_args");

    private static final org.apache.kyuubi.shaded.thrift.protocol.TField TOKEN_OWNER_FIELD_DESC = new org.apache.kyuubi.shaded.thrift.protocol.TField("token_owner", org.apache.kyuubi.shaded.thrift.protocol.TType.STRING, (short)1);
    private static final org.apache.kyuubi.shaded.thrift.protocol.TField RENEWER_KERBEROS_PRINCIPAL_NAME_FIELD_DESC = new org.apache.kyuubi.shaded.thrift.protocol.TField("renewer_kerberos_principal_name", org.apache.kyuubi.shaded.thrift.protocol.TType.STRING, (short)2);

    private static final org.apache.kyuubi.shaded.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new get_delegation_token_argsStandardSchemeFactory();
    private static final org.apache.kyuubi.shaded.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new get_delegation_token_argsTupleSchemeFactory();

    private @org.apache.kyuubi.shaded.thrift.annotation.Nullable java.lang.String token_owner; // required
    private @org.apache.kyuubi.shaded.thrift.annotation.Nullable java.lang.String renewer_kerberos_principal_name; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.kyuubi.shaded.thrift.TFieldIdEnum {
      TOKEN_OWNER((short)1, "token_owner"),
      RENEWER_KERBEROS_PRINCIPAL_NAME((short)2, "renewer_kerberos_principal_name");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      @org.apache.kyuubi.shaded.thrift.annotation.Nullable
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // TOKEN_OWNER
            return TOKEN_OWNER;
          case 2: // RENEWER_KERBEROS_PRINCIPAL_NAME
            return RENEWER_KERBEROS_PRINCIPAL_NAME;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      @org.apache.kyuubi.shaded.thrift.annotation.Nullable
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.kyuubi.shaded.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.kyuubi.shaded.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.kyuubi.shaded.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.TOKEN_OWNER, new org.apache.kyuubi.shaded.thrift.meta_data.FieldMetaData("token_owner", org.apache.kyuubi.shaded.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.kyuubi.shaded.thrift.meta_data.FieldValueMetaData(org.apache.kyuubi.shaded.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.RENEWER_KERBEROS_PRINCIPAL_NAME, new org.apache.kyuubi.shaded.thrift.meta_data.FieldMetaData("renewer_kerberos_principal_name", org.apache.kyuubi.shaded.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.kyuubi.shaded.thrift.meta_data.FieldValueMetaData(org.apache.kyuubi.shaded.thrift.protocol.TType.STRING)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.kyuubi.shaded.thrift.meta_data.FieldMetaData.addStructMetaDataMap(get_delegation_token_args.class, metaDataMap);
    }

    public get_delegation_token_args() {
    }

    public get_delegation_token_args(
      java.lang.String token_owner,
      java.lang.String renewer_kerberos_principal_name)
    {
      this();
      this.token_owner = token_owner;
      this.renewer_kerberos_principal_name = renewer_kerberos_principal_name;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public get_delegation_token_args(get_delegation_token_args other) {
      if (other.isSetToken_owner()) {
        this.token_owner = other.token_owner;
      }
      if (other.isSetRenewer_kerberos_principal_name()) {
        this.renewer_kerberos_principal_name = other.renewer_kerberos_principal_name;
      }
    }

    public get_delegation_token_args deepCopy() {
      return new get_delegation_token_args(this);
    }

    @Override
    public void clear() {
      this.token_owner = null;
      this.renewer_kerberos_principal_name = null;
    }

    @org.apache.kyuubi.shaded.thrift.annotation.Nullable
    public java.lang.String getToken_owner() {
      return this.token_owner;
    }

    public void setToken_owner(@org.apache.kyuubi.shaded.thrift.annotation.Nullable java.lang.String token_owner) {
      this.token_owner = token_owner;
    }

    public void unsetToken_owner() {
      this.token_owner = null;
    }

    /** Returns true if field token_owner is set (has been assigned a value) and false otherwise */
    public boolean isSetToken_owner() {
      return this.token_owner != null;
    }

    public void setToken_ownerIsSet(boolean value) {
      if (!value) {
        this.token_owner = null;
      }
    }

    @org.apache.kyuubi.shaded.thrift.annotation.Nullable
    public java.lang.String getRenewer_kerberos_principal_name() {
      return this.renewer_kerberos_principal_name;
    }

    public void setRenewer_kerberos_principal_name(@org.apache.kyuubi.shaded.thrift.annotation.Nullable java.lang.String renewer_kerberos_principal_name) {
      this.renewer_kerberos_principal_name = renewer_kerberos_principal_name;
    }

    public void unsetRenewer_kerberos_principal_name() {
      this.renewer_kerberos_principal_name = null;
    }

    /** Returns true if field renewer_kerberos_principal_name is set (has been assigned a value) and false otherwise */
    public boolean isSetRenewer_kerberos_principal_name() {
      return this.renewer_kerberos_principal_name != null;
    }

    public void setRenewer_kerberos_principal_nameIsSet(boolean value) {
      if (!value) {
        this.renewer_kerberos_principal_name = null;
      }
    }

    public void setFieldValue(_Fields field, @org.apache.kyuubi.shaded.thrift.annotation.Nullable java.lang.Object value) {
      switch (field) {
      case TOKEN_OWNER:
        if (value == null) {
          unsetToken_owner();
        } else {
          setToken_owner((java.lang.String)value);
        }
        break;

      case RENEWER_KERBEROS_PRINCIPAL_NAME:
        if (value == null) {
          unsetRenewer_kerberos_principal_name();
        } else {
          setRenewer_kerberos_principal_name((java.lang.String)value);
        }
        break;

      }
    }

    @org.apache.kyuubi.shaded.thrift.annotation.Nullable
    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case TOKEN_OWNER:
        return getToken_owner();

      case RENEWER_KERBEROS_PRINCIPAL_NAME:
        return getRenewer_kerberos_principal_name();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case TOKEN_OWNER:
        return isSetToken_owner();
      case RENEWER_KERBEROS_PRINCIPAL_NAME:
        return isSetRenewer_kerberos_principal_name();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that instanceof get_delegation_token_args)
        return this.equals((get_delegation_token_args)that);
      return false;
    }

    public boolean equals(get_delegation_token_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_token_owner = true && this.isSetToken_owner();
      boolean that_present_token_owner = true && that.isSetToken_owner();
      if (this_present_token_owner || that_present_token_owner) {
        if (!(this_present_token_owner && that_present_token_owner))
          return false;
        if (!this.token_owner.equals(that.token_owner))
          return false;
      }

      boolean this_present_renewer_kerberos_principal_name = true && this.isSetRenewer_kerberos_principal_name();
      boolean that_present_renewer_kerberos_principal_name = true && that.isSetRenewer_kerberos_principal_name();
      if (this_present_renewer_kerberos_principal_name || that_present_renewer_kerberos_principal_name) {
        if (!(this_present_renewer_kerberos_principal_name && that_present_renewer_kerberos_principal_name))
          return false;
        if (!this.renewer_kerberos_principal_name.equals(that.renewer_kerberos_principal_name))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetToken_owner()) ? 131071 : 524287);
      if (isSetToken_owner())
        hashCode = hashCode * 8191 + token_owner.hashCode();

      hashCode = hashCode * 8191 + ((isSetRenewer_kerberos_principal_name()) ? 131071 : 524287);
      if (isSetRenewer_kerberos_principal_name())
        hashCode = hashCode * 8191 + renewer_kerberos_principal_name.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(get_delegation_token_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.compare(isSetToken_owner(), other.isSetToken_owner());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetToken_owner()) {
        lastComparison = org.apache.kyuubi.shaded.thrift.TBaseHelper.compareTo(this.token_owner, other.token_owner);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.compare(isSetRenewer_kerberos_principal_name(), other.isSetRenewer_kerberos_principal_name());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetRenewer_kerberos_principal_name()) {
        lastComparison = org.apache.kyuubi.shaded.thrift.TBaseHelper.compareTo(this.renewer_kerberos_principal_name, other.renewer_kerberos_principal_name);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    @org.apache.kyuubi.shaded.thrift.annotation.Nullable
    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.kyuubi.shaded.thrift.protocol.TProtocol iprot) throws org.apache.kyuubi.shaded.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.kyuubi.shaded.thrift.protocol.TProtocol oprot) throws org.apache.kyuubi.shaded.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("get_delegation_token_args(");
      boolean first = true;

      sb.append("token_owner:");
      if (this.token_owner == null) {
        sb.append("null");
      } else {
        sb.append(this.token_owner);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("renewer_kerberos_principal_name:");
      if (this.renewer_kerberos_principal_name == null) {
        sb.append("null");
      } else {
        sb.append(this.renewer_kerberos_principal_name);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.kyuubi.shaded.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.kyuubi.shaded.thrift.protocol.TCompactProtocol(new org.apache.kyuubi.shaded.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.kyuubi.shaded.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.kyuubi.shaded.thrift.protocol.TCompactProtocol(new org.apache.kyuubi.shaded.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.kyuubi.shaded.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class get_delegation_token_argsStandardSchemeFactory implements org.apache.kyuubi.shaded.thrift.scheme.SchemeFactory {
      public get_delegation_token_argsStandardScheme getScheme() {
        return new get_delegation_token_argsStandardScheme();
      }
    }

    private static class get_delegation_token_argsStandardScheme extends org.apache.kyuubi.shaded.thrift.scheme.StandardScheme<get_delegation_token_args> {

      public void read(org.apache.kyuubi.shaded.thrift.protocol.TProtocol iprot, get_delegation_token_args struct) throws org.apache.kyuubi.shaded.thrift.TException {
        org.apache.kyuubi.shaded.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.kyuubi.shaded.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // TOKEN_OWNER
              if (schemeField.type == org.apache.kyuubi.shaded.thrift.protocol.TType.STRING) {
                struct.token_owner = iprot.readString();
                struct.setToken_ownerIsSet(true);
              } else { 
                org.apache.kyuubi.shaded.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // RENEWER_KERBEROS_PRINCIPAL_NAME
              if (schemeField.type == org.apache.kyuubi.shaded.thrift.protocol.TType.STRING) {
                struct.renewer_kerberos_principal_name = iprot.readString();
                struct.setRenewer_kerberos_principal_nameIsSet(true);
              } else { 
                org.apache.kyuubi.shaded.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.kyuubi.shaded.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();
        struct.validate();
      }

      public void write(org.apache.kyuubi.shaded.thrift.protocol.TProtocol oprot, get_delegation_token_args struct) throws org.apache.kyuubi.shaded.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.token_owner != null) {
          oprot.writeFieldBegin(TOKEN_OWNER_FIELD_DESC);
          oprot.writeString(struct.token_owner);
          oprot.writeFieldEnd();
        }
        if (struct.renewer_kerberos_principal_name != null) {
          oprot.writeFieldBegin(RENEWER_KERBEROS_PRINCIPAL_NAME_FIELD_DESC);
          oprot.writeString(struct.renewer_kerberos_principal_name);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class get_delegation_token_argsTupleSchemeFactory implements org.apache.kyuubi.shaded.thrift.scheme.SchemeFactory {
      public get_delegation_token_argsTupleScheme getScheme() {
        return new get_delegation_token_argsTupleScheme();
      }
    }

    private static class get_delegation_token_argsTupleScheme extends org.apache.kyuubi.shaded.thrift.scheme.TupleScheme<get_delegation_token_args> {

      @Override
      public void write(org.apache.kyuubi.shaded.thrift.protocol.TProtocol prot, get_delegation_token_args struct) throws org.apache.kyuubi.shaded.thrift.TException {
        org.apache.kyuubi.shaded.thrift.protocol.TTupleProtocol oprot = (org.apache.kyuubi.shaded.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetToken_owner()) {
          optionals.set(0);
        }
        if (struct.isSetRenewer_kerberos_principal_name()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetToken_owner()) {
          oprot.writeString(struct.token_owner);
        }
        if (struct.isSetRenewer_kerberos_principal_name()) {
          oprot.writeString(struct.renewer_kerberos_principal_name);
        }
      }

      @Override
      public void read(org.apache.kyuubi.shaded.thrift.protocol.TProtocol prot, get_delegation_token_args struct) throws org.apache.kyuubi.shaded.thrift.TException {
        org.apache.kyuubi.shaded.thrift.protocol.TTupleProtocol iprot = (org.apache.kyuubi.shaded.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          struct.token_owner = iprot.readString();
          struct.setToken_ownerIsSet(true);
        }
        if (incoming.get(1)) {
          struct.renewer_kerberos_principal_name = iprot.readString();
          struct.setRenewer_kerberos_principal_nameIsSet(true);
        }
      }
    }

    private static <S extends org.apache.kyuubi.shaded.thrift.scheme.IScheme> S scheme(org.apache.kyuubi.shaded.thrift.protocol.TProtocol proto) {
      return (org.apache.kyuubi.shaded.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  @org.apache.hadoop.classification.InterfaceAudience.Public @org.apache.hadoop.classification.InterfaceStability.Stable public static class get_delegation_token_result implements org.apache.kyuubi.shaded.thrift.TBase<get_delegation_token_result, get_delegation_token_result._Fields>, java.io.Serializable, Cloneable, Comparable<get_delegation_token_result>   {
    private static final org.apache.kyuubi.shaded.thrift.protocol.TStruct STRUCT_DESC = new org.apache.kyuubi.shaded.thrift.protocol.TStruct("get_delegation_token_result");

    private static final org.apache.kyuubi.shaded.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.kyuubi.shaded.thrift.protocol.TField("success", org.apache.kyuubi.shaded.thrift.protocol.TType.STRING, (short)0);
    private static final org.apache.kyuubi.shaded.thrift.protocol.TField O1_FIELD_DESC = new org.apache.kyuubi.shaded.thrift.protocol.TField("o1", org.apache.kyuubi.shaded.thrift.protocol.TType.STRUCT, (short)1);

    private static final org.apache.kyuubi.shaded.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new get_delegation_token_resultStandardSchemeFactory();
    private static final org.apache.kyuubi.shaded.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new get_delegation_token_resultTupleSchemeFactory();

    private @org.apache.kyuubi.shaded.thrift.annotation.Nullable java.lang.String success; // required
    private @org.apache.kyuubi.shaded.thrift.annotation.Nullable MetaException o1; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.kyuubi.shaded.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success"),
      O1((short)1, "o1");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      @org.apache.kyuubi.shaded.thrift.annotation.Nullable
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          case 1: // O1
            return O1;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      @org.apache.kyuubi.shaded.thrift.annotation.Nullable
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.kyuubi.shaded.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.kyuubi.shaded.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.kyuubi.shaded.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.kyuubi.shaded.thrift.meta_data.FieldMetaData("success", org.apache.kyuubi.shaded.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.kyuubi.shaded.thrift.meta_data.FieldValueMetaData(org.apache.kyuubi.shaded.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.O1, new org.apache.kyuubi.shaded.thrift.meta_data.FieldMetaData("o1", org.apache.kyuubi.shaded.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.kyuubi.shaded.thrift.meta_data.StructMetaData(org.apache.kyuubi.shaded.thrift.protocol.TType.STRUCT, MetaException.class)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.kyuubi.shaded.thrift.meta_data.FieldMetaData.addStructMetaDataMap(get_delegation_token_result.class, metaDataMap);
    }

    public get_delegation_token_result() {
    }

    public get_delegation_token_result(
      java.lang.String success,
      MetaException o1)
    {
      this();
      this.success = success;
      this.o1 = o1;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public get_delegation_token_result(get_delegation_token_result other) {
      if (other.isSetSuccess()) {
        this.success = other.success;
      }
      if (other.isSetO1()) {
        this.o1 = new MetaException(other.o1);
      }
    }

    public get_delegation_token_result deepCopy() {
      return new get_delegation_token_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
      this.o1 = null;
    }

    @org.apache.kyuubi.shaded.thrift.annotation.Nullable
    public java.lang.String getSuccess() {
      return this.success;
    }

    public void setSuccess(@org.apache.kyuubi.shaded.thrift.annotation.Nullable java.lang.String success) {
      this.success = success;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    @org.apache.kyuubi.shaded.thrift.annotation.Nullable
    public MetaException getO1() {
      return this.o1;
    }

    public void setO1(@org.apache.kyuubi.shaded.thrift.annotation.Nullable MetaException o1) {
      this.o1 = o1;
    }

    public void unsetO1() {
      this.o1 = null;
    }

    /** Returns true if field o1 is set (has been assigned a value) and false otherwise */
    public boolean isSetO1() {
      return this.o1 != null;
    }

    public void setO1IsSet(boolean value) {
      if (!value) {
        this.o1 = null;
      }
    }

    public void setFieldValue(_Fields field, @org.apache.kyuubi.shaded.thrift.annotation.Nullable java.lang.Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((java.lang.String)value);
        }
        break;

      case O1:
        if (value == null) {
          unsetO1();
        } else {
          setO1((MetaException)value);
        }
        break;

      }
    }

    @org.apache.kyuubi.shaded.thrift.annotation.Nullable
    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      case O1:
        return getO1();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      case O1:
        return isSetO1();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that instanceof get_delegation_token_result)
        return this.equals((get_delegation_token_result)that);
      return false;
    }

    public boolean equals(get_delegation_token_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      boolean this_present_o1 = true && this.isSetO1();
      boolean that_present_o1 = true && that.isSetO1();
      if (this_present_o1 || that_present_o1) {
        if (!(this_present_o1 && that_present_o1))
          return false;
        if (!this.o1.equals(that.o1))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetSuccess()) ? 131071 : 524287);
      if (isSetSuccess())
        hashCode = hashCode * 8191 + success.hashCode();

      hashCode = hashCode * 8191 + ((isSetO1()) ? 131071 : 524287);
      if (isSetO1())
        hashCode = hashCode * 8191 + o1.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(get_delegation_token_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.compare(isSetSuccess(), other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.kyuubi.shaded.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.compare(isSetO1(), other.isSetO1());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetO1()) {
        lastComparison = org.apache.kyuubi.shaded.thrift.TBaseHelper.compareTo(this.o1, other.o1);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    @org.apache.kyuubi.shaded.thrift.annotation.Nullable
    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.kyuubi.shaded.thrift.protocol.TProtocol iprot) throws org.apache.kyuubi.shaded.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.kyuubi.shaded.thrift.protocol.TProtocol oprot) throws org.apache.kyuubi.shaded.thrift.TException {
      scheme(oprot).write(oprot, this);
      }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("get_delegation_token_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("o1:");
      if (this.o1 == null) {
        sb.append("null");
      } else {
        sb.append(this.o1);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.kyuubi.shaded.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.kyuubi.shaded.thrift.protocol.TCompactProtocol(new org.apache.kyuubi.shaded.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.kyuubi.shaded.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.kyuubi.shaded.thrift.protocol.TCompactProtocol(new org.apache.kyuubi.shaded.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.kyuubi.shaded.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class get_delegation_token_resultStandardSchemeFactory implements org.apache.kyuubi.shaded.thrift.scheme.SchemeFactory {
      public get_delegation_token_resultStandardScheme getScheme() {
        return new get_delegation_token_resultStandardScheme();
      }
    }

    private static class get_delegation_token_resultStandardScheme extends org.apache.kyuubi.shaded.thrift.scheme.StandardScheme<get_delegation_token_result> {

      public void read(org.apache.kyuubi.shaded.thrift.protocol.TProtocol iprot, get_delegation_token_result struct) throws org.apache.kyuubi.shaded.thrift.TException {
        org.apache.kyuubi.shaded.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.kyuubi.shaded.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.kyuubi.shaded.thrift.protocol.TType.STRING) {
                struct.success = iprot.readString();
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.kyuubi.shaded.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 1: // O1
              if (schemeField.type == org.apache.kyuubi.shaded.thrift.protocol.TType.STRUCT) {
                struct.o1 = new MetaException();
                struct.o1.read(iprot);
                struct.setO1IsSet(true);
              } else { 
                org.apache.kyuubi.shaded.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.kyuubi.shaded.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();
        struct.validate();
      }

      public void write(org.apache.kyuubi.shaded.thrift.protocol.TProtocol oprot, get_delegation_token_result struct) throws org.apache.kyuubi.shaded.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          oprot.writeString(struct.success);
          oprot.writeFieldEnd();
        }
        if (struct.o1 != null) {
          oprot.writeFieldBegin(O1_FIELD_DESC);
          struct.o1.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class get_delegation_token_resultTupleSchemeFactory implements org.apache.kyuubi.shaded.thrift.scheme.SchemeFactory {
      public get_delegation_token_resultTupleScheme getScheme() {
        return new get_delegation_token_resultTupleScheme();
      }
    }

    private static class get_delegation_token_resultTupleScheme extends org.apache.kyuubi.shaded.thrift.scheme.TupleScheme<get_delegation_token_result> {

      @Override
      public void write(org.apache.kyuubi.shaded.thrift.protocol.TProtocol prot, get_delegation_token_result struct) throws org.apache.kyuubi.shaded.thrift.TException {
        org.apache.kyuubi.shaded.thrift.protocol.TTupleProtocol oprot = (org.apache.kyuubi.shaded.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        if (struct.isSetO1()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetSuccess()) {
          oprot.writeString(struct.success);
        }
        if (struct.isSetO1()) {
          struct.o1.write(oprot);
        }
      }

      @Override
      public void read(org.apache.kyuubi.shaded.thrift.protocol.TProtocol prot, get_delegation_token_result struct) throws org.apache.kyuubi.shaded.thrift.TException {
        org.apache.kyuubi.shaded.thrift.protocol.TTupleProtocol iprot = (org.apache.kyuubi.shaded.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          struct.success = iprot.readString();
          struct.setSuccessIsSet(true);
        }
        if (incoming.get(1)) {
          struct.o1 = new MetaException();
          struct.o1.read(iprot);
          struct.setO1IsSet(true);
        }
      }
    }

    private static <S extends org.apache.kyuubi.shaded.thrift.scheme.IScheme> S scheme(org.apache.kyuubi.shaded.thrift.protocol.TProtocol proto) {
      return (org.apache.kyuubi.shaded.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

}
